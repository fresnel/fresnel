@font-face {
	font-family: 'Computer Modern Serif';
	src: url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunrm.eot');
	src: url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunrm.eot?#iefix') format('embedded-opentype'),
		 url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunrm.woff') format('woff'),
		 url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunrm.ttf') format('truetype'),
		 url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunrm.svg#cmunrm') format('svg');
	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: 'Computer Modern Serif';
	src: url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunti.eot');
	src: url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunti.eot?#iefix') format('embedded-opentype'),
		 url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunti.woff') format('woff'),
		 url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunti.ttf') format('truetype'),
		 url('https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/font/Serif/cmunti.svg#cmunti') format('svg');
	font-weight: normal;
	font-style: italic;
}

:root {
  --Optic-colour: #000;
  --Class-colour: #bbb;

  --iso-colour: hsl(0, 50%, 50%);
  --prism-colour: hsl(45, 50%, 50%);
  --review-colour: hsl(90, 50%, 50%);
  --traversal-colour: hsl(135, 50%, 50%);
  --setter-colour: hsl(135, 50%, 75%);
  --fold-colour: hsl(180, 50%, 50%);
  --affine-fold-colour: hsl(225, 50%, 50%);
  --getter-colour: hsl(270, 50%, 50%);
  --lens-colour: hsl(315, 50%, 50%);
  --optional-colour: hsl(0, 0%, 60%);
}
text {
  font-family: "Computer Modern Serif";
  font-size: 20px;
  text-anchor: middle;
  alignment-baseline: middle;
  transform-origin: center center;
  stroke-width: 0;
}
.label {
  stroke-width: var(--label-stroke-width, 0.5px);
  stroke-dasharray: 1px 1px;
  pointer-events: none;
}
.Class {
  color: var(--Class-colour);
  stroke-dasharray: 1px 1px;
}
.Class text {
  font-style: italic;
}
path, polyline {
  stroke-miterlimit: 8;
  stroke-linejoin: miter;
  stroke-linecap: square;
  fill: transparent;
  shape-rendering: geometricPrecision;
}
circle {
  stroke-width: 0;
  pointer-events: none;
}
use.Class {
  fill: var(--Class-colour);
  stroke: var(--Class-colour);
}
.vertex {
  fill: currentColor;
  stroke: currentColor;
}
#Iso, .Iso {
  color: var(--iso-colour);
}
#Lens, .Lens {
  color: var(--lens-colour);
}
#Getter, .Getter {
  color: var(--getter-colour);
}
#Prism, .Prism {
  color: var(--prism-colour);
}
#Review, .Review {
  color: var(--review-colour);
}
#Optional, .Optional, #Optional text {
  color: var(--optional-colour);
  text-anchor: end;
}
#AffineFold, .AffineFold {
  color: var(--affine-fold-colour);
}
#Traversal, .Traversal {
  color: var(--traversal-colour);
}
#Fold, .Fold {
  color: var(--fold-colour);
}
#Setter, .Setter {
  color: var(--setter-colour);
}
.Iso.Lens {
  stroke: url(#gradient-Iso-Lens);
}
.Iso.Prism {
  stroke: url(#gradient-Iso-Prism);
}
.Lens.Optional {
  stroke: url(#gradient-Lens-Optional);
}
.Lens.Getter {
  stroke: url(#gradient-Lens-Getter);
}
.Prism.Optional {
  stroke: url(#gradient-Prism-Optional);
}
.Prism.Review {
  stroke: url(#gradient-Prism-Review);
}
.Getter.AffineFold {
  stroke: url(#gradient-Getter-AffineFold);
}
.Optional.AffineFold {
  stroke: url(#gradient-Optional-AffineFold);
}
.AffineFold.Fold {
  stroke: url(#gradient-AffineFold-Fold);
}
.Optional.Traversal {
  stroke: url(#gradient-Optional-Traversal);
}
.Traversal.Fold {
  stroke: url(#gradient-Traversal-Fold);
}
.Traversal.Setter {
  stroke: url(#gradient-Traversal-Setter);
}
stop {
  stop-color: currentColor;
}
.vertex {
  pointer-events: none;
  --edge-stroke-width: 0.5px;
}
.vertex text {
  pointer-events: all;
}
.vertex .ancestors {
  pointer-events: none;
  visibility: hidden;
  --edge-stroke-width: 1.25px;
}
.vertex:hover {
  --label-stroke-width: 1px;
}
.vertex.hover, .vertex:hover circle {
  stroke-width: 2px;
}
.vertex:hover .ancestors {
  visibility: visible;
}
.edge {
  pointer-events: none;
  stroke-width: var(--edge-stroke-width, 0.5px);
}
