<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="-575 -150 1300 650">
    <style>
        @import url(https://cdn.rawgit.com/dreampulse/computer-modern-web-font/master/fonts.css);

:root {
  --Optic-colour: #000;
  --Class-colour: #bbb;

  --iso-colour: hsl(0, 50%, 50%);
  --prism-colour: hsl(45, 50%, 50%);
  --review-colour: hsl(90, 50%, 50%);
  --traversal-colour: hsl(135, 50%, 50%);
  --setter-colour: hsl(135, 50%, 75%);
  --fold-colour: hsl(180, 50%, 50%);
  --affine-fold-colour: hsl(225, 50%, 50%);
  --getter-colour: hsl(270, 50%, 50%);
  --lens-colour: hsl(315, 50%, 50%);
  --optional-colour: hsl(0, 0%, 60%);
}
text {
  font-family: "Computer Modern Serif";
  font-size: 20px;
  text-anchor: middle;
  alignment-baseline: middle;
  transform-origin: center center;
  stroke-width: 0;
}
.label {
  stroke-width: var(--label-stroke-width, 0.5px);
  stroke-dasharray: 1px 1px;
  pointer-events: none;
}
.Class {
  color: var(--Class-colour);
  stroke-dasharray: 1px 1px;
}
.Class text {
  font-style: italic;
}
path, polyline {
  stroke-miterlimit: 8;
  stroke-linejoin: miter;
  stroke-linecap: square;
  fill: transparent;
  shape-rendering: geometricPrecision;
}
circle {
  stroke-width: 0;
  pointer-events: none;
}
use.Class {
  fill: var(--Class-colour);
  stroke: var(--Class-colour);
}
.vertex {
  fill: currentColor;
  stroke: currentColor;
}
#Iso, .Iso {
  color: var(--iso-colour);
}
#Lens, .Lens {
  color: var(--lens-colour);
}
#Getter, .Getter {
  color: var(--getter-colour);
}
#Prism, .Prism {
  color: var(--prism-colour);
}
#Review, .Review {
  color: var(--review-colour);
}
#Optional, .Optional, #Optional text {
  color: var(--optional-colour);
  text-anchor: end;
}
#AffineFold, .AffineFold {
  color: var(--affine-fold-colour);
}
#Traversal, .Traversal {
  color: var(--traversal-colour);
}
#Fold, .Fold {
  color: var(--fold-colour);
}
#Setter, .Setter {
  color: var(--setter-colour);
}
.Iso.Lens {
  stroke: url(#gradient-Iso-Lens);
}
.Iso.Prism {
  stroke: url(#gradient-Iso-Prism);
}
.Lens.Optional {
  stroke: url(#gradient-Lens-Optional);
}
.Lens.Getter {
  stroke: url(#gradient-Lens-Getter);
}
.Prism.Optional {
  stroke: url(#gradient-Prism-Optional);
}
.Prism.Review {
  stroke: url(#gradient-Prism-Review);
}
.Getter.AffineFold {
  stroke: url(#gradient-Getter-AffineFold);
}
.Optional.AffineFold {
  stroke: url(#gradient-Optional-AffineFold);
}
.AffineFold.Fold {
  stroke: url(#gradient-AffineFold-Fold);
}
.Optional.Traversal {
  stroke: url(#gradient-Optional-Traversal);
}
.Traversal.Fold {
  stroke: url(#gradient-Traversal-Fold);
}
.Traversal.Setter {
  stroke: url(#gradient-Traversal-Setter);
}
stop {
  stop-color: currentColor;
}
.vertex {
  pointer-events: none;
  --edge-stroke-width: 0.5px;
}
.vertex text {
  pointer-events: all;
}
.vertex .ancestors {
  pointer-events: none;
}
.vertex.hover, .vertex:hover {
  --label-stroke-width: 1px;
}
.vertex.hover, .vertex:hover circle {
  stroke-width: 2px;
}
.edge.hover, .vertex:hover .ancestors {
  --edge-stroke-width: 1.25px;
}
.edge {
  pointer-events: none;
  stroke-width: var(--edge-stroke-width, 0.5px);
}

    </style>
    <defs>
        <linearGradient id="gradient-Iso-Lens" x1="100%" y1="0%" x2="0%" y2="100%">
            <stop class="Iso" offset="0%" />
            <stop class="Lens" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Iso-Prism" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop class="Iso" offset="0%" />
            <stop class="Prism" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Lens-Optional" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop class="Lens" offset="0%" />
            <stop class="Optional" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Lens-Getter" x1="100%" y1="0%" x2="0%" y2="100%">
            <stop class="Lens" offset="0%" />
            <stop class="Getter" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Getter-AffineFold" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop class="Getter" offset="0%" />
            <stop class="AffineFold" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Prism-Optional" x1="100%" y1="0%" x2="0%" y2="100%">
            <stop class="Prism" offset="0%" />
            <stop class="Optional" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Prism-Review" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop class="Prism" offset="0%" />
            <stop class="Review" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Optional-AffineFold" x1="100%" y1="0%" x2="0%" y2="100%">
            <stop class="Optional" offset="0%" />
            <stop class="AffineFold" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Optional-Traversal" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop class="Optional" offset="0%" />
            <stop class="Traversal" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-AffineFold-Fold" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop class="AffineFold" offset="0%" />
            <stop class="Fold" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Traversal-Fold" x1="100%" y1="0%" x2="0%" y2="100%">
            <stop class="Traversal" offset="0%" />
            <stop class="Fold" offset="100%" />
        </linearGradient>
        <linearGradient id="gradient-Traversal-Setter" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop class="Traversal" offset="0%" />
            <stop class="Setter" offset="100%" />
        </linearGradient>
    </defs>
    <g id="Iso" class="vertex Optic" transform="translate(0 0)" data-ancestors="Profunctor-Iso">
        <path id="Iso-Lens" class="edge Optic Iso Lens" d="m -10,5 l -180,90 m 6,-8 l -6,8 l 10,0 " />
        <path id="Iso-Prism" class="edge Optic Iso Prism" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Iso
        </text>
    </g>
    <g id="Lens" class="vertex Optic" transform="translate(-200 100)" data-ancestors="Iso-Lens Profunctor-Iso Profunctor-Strong Strong-Lens">
        <path id="Lens-Optional" class="edge Optic Lens Optional" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <path id="Lens-Getter" class="edge Optic Lens Getter" d="m -10,5 l -180,90 m 6,-8 l -6,8 l 10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,-15 h -50 " />
        <text transform="translate(-80 -30)">
            Lens
        </text>
    </g>
    <g id="Getter" class="vertex Optic" transform="translate(-400 200)" data-ancestors="Bicontravariant-Getter Cochoice-Getter Iso-Lens Lens-Getter Profunctor-Cochoice Profunctor-Iso Profunctor-Strong Strong-Lens">
        <path id="Getter-AffineFold" class="edge Optic Getter AffineFold" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,15 h -50 " />
        <text transform="translate(-80 30)">
            Getter
        </text>
    </g>
    <g id="Prism" class="vertex Optic" transform="translate(200 100)" data-ancestors="Choice-Prism Iso-Prism Profunctor-Choice Profunctor-Iso">
        <path id="Prism-Optional" class="edge Optic Prism Optional" d="m -10,5 l -180,90 m 6,-8 l -6,8 l 10,0 " />
        <path id="Prism-Review" class="edge Optic Prism Review" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Prism
        </text>
    </g>
    <g id="Review" class="vertex Optic" transform="translate(400 200)" data-ancestors="Bifunctor-Review Choice-Prism Costrong-Review Iso-Prism Prism-Review Profunctor-Choice Profunctor-Costrong Profunctor-Iso">
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Review
        </text>
    </g>
    <g id="Optional" class="vertex Optic" transform="translate(0 200)" data-ancestors="Choice-Prism Iso-Lens Iso-Prism Lens-Optional Prism-Optional Profunctor-Choice Profunctor-Iso Profunctor-Strong Strong-Lens">
        <path id="Optional-AffineFold" class="edge Optic Optional AffineFold" d="m -10,5 l -180,90 m 6,-8 l -6,8 l 10,0 " />
        <path id="Optional-Traversal" class="edge Optic Optional Traversal" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,0 h -50 " />
        <text transform="translate(-80 0)">
            Optional
        </text>
    </g>
    <g id="AffineFold" class="vertex Optic" transform="translate(-200 300)" data-ancestors="Bicontravariant-Getter Choice-Prism Cochoice-Getter Getter-AffineFold Iso-Lens Iso-Prism Lens-Getter Lens-Optional Optional-AffineFold Prism-Optional Profunctor-Choice Profunctor-Cochoice Profunctor-Iso Profunctor-Strong Strong-Lens">
        <path id="AffineFold-Fold" class="edge Optic AffineFold Fold" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,15 h -50 " />
        <text transform="translate(-80 30)">
            AffineFold
        </text>
    </g>
    <g id="Traversal" class="vertex Optic" transform="translate(200 300)" data-ancestors="Choice-Prism Choice-Traversing Iso-Lens Iso-Prism Lens-Optional Optional-Traversal Prism-Optional Profunctor-Choice Profunctor-Iso Profunctor-Strong Strong-Lens Strong-Traversing Traversing-Traversal">
        <path id="Traversal-Fold" class="edge Optic Traversal Fold" d="m -10,5 l -180,90 m 6,-8 l -6,8 l 10,0 " />
        <path id="Traversal-Setter" class="edge Optic Traversal Setter" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Traversal
        </text>
    </g>
    <g id="Fold" class="vertex Optic" transform="translate(0 400)" data-ancestors="AffineFold-Fold Bicontravariant-Getter Choice-Prism Choice-Traversing Cochoice-Getter Getter-AffineFold Iso-Lens Iso-Prism Lens-Getter Lens-Optional Optional-AffineFold Optional-Traversal Prism-Optional Profunctor-Choice Profunctor-Cochoice Profunctor-Iso Profunctor-Strong Strong-Lens Strong-Traversing Traversal-Fold Traversing-Traversal">
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,15 h -50 " />
        <text transform="translate(-80 30)">
            Fold
        </text>
    </g>
    <g id="Setter" class="vertex Optic" transform="translate(400 400)" data-ancestors="Choice-Prism Choice-Traversing Closed-Mapping Iso-Lens Iso-Prism Lens-Optional Mapping-Setter Optional-Traversal Prism-Optional Profunctor-Choice Profunctor-Closed Profunctor-Iso Profunctor-Strong Strong-Lens Strong-Traversing Traversal-Setter Traversing-Mapping Traversing-Traversal">
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,15 h 50 " />
        <text transform="translate(80 30)">
            Setter
        </text>
    </g>
    <g id="Profunctor" class="vertex Class" transform="translate(0 -100)" data-ancestors="">
        <path id="Profunctor-Iso" class="edge Class Profunctor Iso" d="m 0,10 l 0,80 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " />
        <path id="Profunctor-Strong" class="edge Class Profunctor Strong" d="m -10,5 l -180,90 m 6,-8 l -6,8 l 10,0 " transform="translate(-5.0 -2.5)" />
        <path id="Profunctor-Choice" class="edge Class Profunctor Choice" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " transform="translate(-10.0 5.0)" />
        <path id="Profunctor-Cochoice" class="edge Class Profunctor Cochoice" d="m -10,5 l -380,190 m 6,-8 l -6,8 l 10,0 " transform="translate(5.0 2.5)" />
        <path id="Profunctor-Costrong" class="edge Class Profunctor Costrong" d="m 10,5 l 380,190 m -6,-8 l 6,8 l -10,0 " />
        <path id="Profunctor-Closed" class="edge Class Profunctor Closed" d="m 10,5 l 580,290 m -6,-8 l 6,8 l -10,0 " transform="translate(10.0 -5.0)" />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Profunctor
        </text>
    </g>
    <g id="Strong" class="vertex Class" transform="translate(-200 0)" data-ancestors="Profunctor-Strong">
        <path id="Strong-Lens" class="edge Class Strong Lens" d="m 0,10 l 0,80 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " />
        <path id="Strong-Traversing" class="edge Class Strong Traversing" d="m 10,5 l 380,190 m -6,-8 l 6,8 l -10,0 " transform="translate(-5.0 2.5)" />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,-15 h -50 " />
        <text transform="translate(-80 -30)">
            Strong
        </text>
    </g>
    <g id="Cochoice" class="vertex Class" transform="translate(-400 100)" data-ancestors="Profunctor-Cochoice">
        <path id="Cochoice-Getter" class="edge Class Cochoice Getter" d="m 0,10 l 0,80 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " transform="translate(-5.0 2.5)" />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,-15 h -50 " />
        <text transform="translate(-80 -30)">
            Cochoice
        </text>
    </g>
    <g id="Bicontravariant" class="vertex Class" transform="translate(-400 0)" data-ancestors="">
        <path id="Bicontravariant-Getter" class="edge Class Bicontravariant Getter" d="m 0,10 l 0,180 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " transform="translate(5.0 -2.5)" />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,-15 h -50 " />
        <text transform="translate(-80 -30)">
            Bicontravariant
        </text>
    </g>
    <g id="Choice" class="vertex Class" transform="translate(200 0)" data-ancestors="Profunctor-Choice">
        <path id="Choice-Prism" class="edge Class Choice Prism" d="m 0,10 l 0,80 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " />
        <path id="Choice-Traversing" class="edge Class Choice Traversing" d="m -10,5 l -190,95 l 190,95 m -6,-8 l 6,8 l -10,0 " transform="translate(5.0 -2.5)" />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Choice
        </text>
    </g>
    <g id="Costrong" class="vertex Class" transform="translate(400 100)" data-ancestors="Profunctor-Costrong">
        <path id="Costrong-Review" class="edge Class Costrong Review" d="m 0,10 l 0,80 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " transform="translate(5.0 2.5)" />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Costrong
        </text>
    </g>
    <g id="Bifunctor" class="vertex Class" transform="translate(400 0)" data-ancestors="">
        <path id="Bifunctor-Review" class="edge Class Bifunctor Review" d="m 0,10 l 0,180 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " transform="translate(-5.0 -2.5)" />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Bifunctor
        </text>
    </g>
    <g id="Closed" class="vertex Class" transform="translate(600 200)" data-ancestors="Profunctor-Closed">
        <path id="Closed-Mapping" class="edge Class Closed Mapping" d="m -10,5 l -180,90 m 6,-8 l -6,8 l 10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,-15 h 50 " />
        <text transform="translate(80 -30)">
            Closed
        </text>
    </g>
    <g id="Traversing" class="vertex Class" transform="translate(200 200)" data-ancestors="Choice-Traversing Profunctor-Choice Profunctor-Strong Strong-Traversing">
        <path id="Traversing-Traversal" class="edge Class Traversing Traversal" d="m 0,10 l 0,80 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " />
        <path id="Traversing-Mapping" class="edge Class Traversing Mapping" d="m 10,5 l 180,90 m -6,-8 l 6,8 l -10,0 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l -30,15 h -50 " />
        <text transform="translate(-80 30)">
            Traversing
        </text>
    </g>
    <g id="Mapping" class="vertex Class" transform="translate(400 300)" data-ancestors="Choice-Traversing Closed-Mapping Profunctor-Choice Profunctor-Closed Profunctor-Strong Strong-Traversing Traversing-Mapping">
        <path id="Mapping-Setter" class="edge Class Mapping Setter" d="m 0,10 l 0,80 m -4.472136,-8.944272 l 4.472136,8.944272 l 4.472136,-8.944272 " />
        <circle r="2.5" />
        <path class="label" d="m 0,0 l 30,15 h 50 " />
        <text transform="translate(80 30)">
            Mapping
        </text>
    </g>
    <script>
        function ancestors(v) {
  return v.getAttribute("data-ancestors")?.split(' ').filter(i => i.length > 0).map(i => document.getElementById(i)) || [];
}
document.querySelectorAll('.vertex').forEach(v => {
  v.onmouseover = () => [v, ...ancestors(v)].forEach(e => e.classList.add('hover'));
  v.onmouseout = () => [v, ...ancestors(v)].forEach(e => e.classList.remove('hover'));
});

    </script>
</svg>
